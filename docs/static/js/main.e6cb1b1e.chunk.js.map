{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.jsx","data/heroes.js","components/hero/HeroCard.jsx","components/hero/HeroList.jsx","helpers/getHeroesByPublisher.js","components/dc/DcScreen.jsx","components/hero/HeroScreen.jsx","helpers/getHeroById.js","components/marvel/MarveScreen.jsx","components/search/SearchScreen.jsx","hook/useForm.js","helpers/getHeroesByName.js","components/ui/NavBar.jsx","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","dispatch","useContext","navigate","useNavigate","className","onClick","name","lastPaht","localStorage","getItem","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","src","alt","to","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","navigate1","find","getHeroById","imagePath","MarveScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","handleInputChange","heroesFileted","length","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","Navbar","user","DashboardRoutes","path","element","PrivateRoute","children","pathname","setItem","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAIaA,EAAcC,0B,OCFdC,EACF,eADEA,EAED,gBCACC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKJ,EACD,OAAO,2BACAG,EAAOE,SADd,IAEIC,QAAQ,IAEhB,KAAKN,EACD,MAAO,CACHM,QAAQ,GAEhB,QACI,OAAOJ,I,qBCXNK,EAAc,WAGvB,IAAQC,EAAaC,qBAAWX,GAAxBU,SACFE,EAAWC,cAkBjB,OACI,sBAAKC,UAAU,iBAAf,UACI,uCACA,uBAEA,wBACIA,UAAU,kBACVC,QAvBQ,WAOhBL,EALe,CACXJ,KAAMJ,EACNK,QAAS,CAAES,KAAM,UAKrB,IAAMC,EAAWC,aAAaC,QAAQ,aAAe,IAErDP,EAASK,EAAU,CACfG,SAAS,KAST,mCChCCC,EAAS,CAClB,CACI,GAAM,YACN,UAAa,SACb,UAAa,YACb,UAAa,cACb,iBAAoB,uBACpB,WAAc,eAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,YACb,UAAa,SACb,iBAAoB,mBACpB,WAAc,UAElB,CACI,GAAM,WACN,UAAa,QACb,UAAa,YACb,UAAa,cACb,iBAAoB,kBACpB,WAAc,oDAElB,CACI,GAAM,WACN,UAAa,gBACb,UAAa,YACb,UAAa,aACb,iBAAoB,0BACpB,WAAc,6FAElB,CACI,GAAM,WACN,UAAa,cACb,UAAa,YACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,YACN,UAAa,eACb,UAAa,YACb,UAAa,iBACb,iBAAoB,qBACpB,WAAc,kBAElB,CACI,GAAM,aACN,UAAa,oBACb,UAAa,YACb,UAAa,eACb,iBAAoB,wBACpB,WAAc,qBAElB,CACI,GAAM,WACN,UAAa,kBACb,UAAa,YACb,UAAa,eACb,iBAAoB,uBACpB,WAAc,gBAElB,CACI,GAAM,UACN,UAAa,cACb,UAAa,YACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,qCAElB,CACI,GAAM,WACN,UAAa,eACb,UAAa,YACb,UAAa,cACb,iBAAoB,mBACpB,WAAc,4BAElB,CACI,GAAM,gBACN,UAAa,aACb,UAAa,gBACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,iBACN,UAAa,kBACb,UAAa,gBACb,UAAa,eACb,iBAAoB,4BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,gBACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,cAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,0BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,yBACpB,WAAc,gBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,2BACpB,WAAc,iBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,0BACb,iBAAoB,eACpB,WAAc,2BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,yBACb,iBAAoB,wBACpB,WAAc,0BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,WACpB,WAAc,iBAElB,CACI,GAAM,gBACN,UAAa,gBACb,UAAa,gBACb,UAAa,cACb,iBAAoB,yBACpB,WAAc,gBC5JTC,EAAW,SAAC,GAOlB,IANHC,EAME,EANFA,GACAC,EAKE,EALFA,UAEAC,GAGE,EAJFC,UAIE,EAHFD,WACAE,EAEE,EAFFA,iBACAC,EACE,EADFA,WAEA,OACI,qBAAKd,UAAU,MAAf,SACI,qBAAKA,UAAU,yCAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKe,IAAG,kBAAaN,EAAb,QAAuBT,UAAU,WAAWgB,IAAKN,MAE7D,qBAAKV,UAAU,QAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SACKU,IAEL,mBAAGV,UAAU,YAAb,SACKW,IAGAA,IAAcG,GACf,mBAAGd,UAAU,aAAb,SAA2Bc,IAE/B,mBAAGd,UAAU,YAAb,SACI,uBAAOA,UAAU,aAAjB,SAA+Ba,MAEnC,cAAC,IAAD,CAAMI,GAAE,gBAAWR,GAAnB,oCC7BfS,EAAW,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UAEjBL,EAASY,mBAAQ,kBCHS,SAACP,GAGjC,IADwB,CAAC,YAAa,iBACjBQ,SAASR,GAC1B,MAAM,IAAIS,MAAJ,UAAaT,EAAb,8BAGV,OAAOL,EAAOe,QAAO,SAAAC,GAAI,OAAIA,EAAKX,YAAcA,KDJnBY,CAAqBZ,KAAY,CAACA,IAE/D,OACI,qBAAKZ,UAAU,oFAAf,SAEQO,EAAOkB,KAAI,SAAAF,GAAI,OAEX,cAAC,EAAD,eAA4BA,GAAbA,EAAKd,UEV3BiB,EAAW,WACpB,OACI,gCACI,0CACA,uBACA,cAAC,EAAD,CACId,UAAW,kBCLde,EAAa,WAEtB,IAAQC,EAAYC,cAAZD,QACFE,EAAY/B,cAEZwB,EAAOJ,mBAAQ,kBCNE,WAAc,IAAbV,EAAY,uDAAP,GAC7B,OAAOF,EAAOwB,MAAK,SAAAR,GAAI,OAAIA,EAAKd,KAAOA,KDKZuB,CAAYJ,KAAU,CAACA,IAMlD,IAAKL,EACD,OAAO,cAAC,IAAD,CAAUN,GAAG,MAGxB,IAAQR,EAAsEc,EAAtEd,GAAIE,EAAkEY,EAAlEZ,UAAWD,EAAuDa,EAAvDb,UAAWE,EAA4CW,EAA5CX,UAAWC,EAAiCU,EAAjCV,iBAAkBC,EAAeS,EAAfT,WAEzDmB,EAAS,kBAAcxB,EAAd,QACf,OACI,sBAAKT,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKe,IAAKkB,EAAWjB,IAAKN,EAAWV,UAAU,0DAEnD,sBAAKA,UAAU,QAAf,UACI,6BAAKuB,EAAKb,YACV,qBAAIV,UAAU,aAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,2CAAhC,IAAmDW,KACnD,qBAAIX,UAAU,kBAAd,UAAgC,2CAAhC,IAAmDY,KACnD,qBAAIZ,UAAU,kBAAd,UAAgC,kDAAhC,IAA0Da,QAE9D,uBACA,4CACA,4BAAIC,IACJ,wBACId,UAAU,uBACVC,QA5BK,WACjB6B,GAAW,IAyBH,6BElCHI,EAAc,WACvB,OACI,gCACI,6CACA,uBACA,cAAC,EAAD,CACItB,UAAW,sB,wBCFduB,EAAe,WAExB,IAAMrC,EAAWC,cACXqC,EAAWC,cAEjB,EAAmBC,IAAYC,MAAMH,EAASI,QAAtCC,SAAR,MAAY,GAAZ,EAEA,ECXmB,WAAwB,IAAvBC,EAAsB,uDAAP,GAEnC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAgBA,MAAO,CAACD,EATkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAO5C,KAAO4C,EAAOC,UAThB,WACVF,EAAUH,KDMsBM,CAAQ,CACxCC,WAAYR,IADhB,mBAAOG,EAAP,KAAeM,EAAf,KAIQD,EAAeL,EAAfK,WACFE,EAAgBhC,mBAAQ,kBEjBH,WAAgB,IAAfjB,EAAc,uDAAP,GAEnC,MAAoB,KAAhBA,EAAKkD,OACE,IAGXlD,EAAOA,EAAKmD,cACL9C,EAAOe,QAAO,SAAAC,GAAI,OAAIA,EAAKb,UAAU2C,cAAcjC,SAASlB,OFU/BoD,CAAgBb,KAAI,CAACA,IAMzD,OACI,gCACI,8CACA,uBACA,sBAAKzC,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wCACA,uBACA,uBAAMuD,SAZD,SAACC,GAClBA,EAAEC,iBACF3D,EAAS,MAAD,OAAOmD,KAUH,UACI,uBACIzD,KAAK,OACLkE,YAAY,kBACZ1D,UAAU,eACVE,KAAK,aACLyD,aAAa,MACbZ,MAAOE,EACPW,SAAUV,IAGd,wBACIlD,UAAU,+BACVR,KAAK,SAFT,6BAQR,sBAAKQ,UAAU,QAAf,UACI,4CACA,uBAGW,KAANyC,EACK,qBAAKzC,UAAU,mBAAf,gCAEAmD,EAAc1B,KAAI,SAAAF,GAAI,OACpB,cAAC,EAAD,eAEQA,GADCA,EAAKd,OAMI,IAAzB0C,EAAcC,QAAiB,sBAAKpD,UAAU,qBAAf,gCAAwDyC,eG/DnGoB,EAAS,WAElB,MAA2BhE,qBAAWX,GAA9B4E,EAAR,EAAQA,KAAMlE,EAAd,EAAcA,SACRE,EAAWC,cAYjB,OACI,sBAAKC,UAAU,8CAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACViB,GAAG,IAFP,0BAOA,qBAAKjB,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACIA,UAAU,oBACViB,GAAG,UAFP,oBAOA,cAAC,IAAD,CACIjB,UAAU,oBACViB,GAAG,MAFP,gBAOA,cAAC,IAAD,CACIjB,UAAU,oBACViB,GAAG,UAFP,yBASR,qBAAKjB,UAAU,mFAAf,SACI,qBAAIA,UAAU,qBAAd,UAEI,sBAAMA,UAAU,8BAAhB,SACK8D,EAAK5D,OAEV,wBACIF,UAAU,wBACVC,QAtDC,WAEjBL,EAAS,CACLJ,KAAMJ,IAGVU,EAAS,SAAU,CACfQ,SAAS,KA6CD,6BCtDPyD,EAAkB,WAC3B,OACI,qCACI,cAAC,EAAD,IACA,qBAAK/D,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgE,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,EAAD,MAC1B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MAGrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eCfhCC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEnBL,EAASjE,qBAAWX,GAApB4E,KAER,EAA6BzB,cAArB+B,EAAR,EAAQA,SAAU5B,EAAlB,EAAkBA,OAIlB,OAFApC,aAAaiE,QAAQ,WAAYD,EAAW5B,GAErCsB,EAAKpE,OACNyE,EACA,cAAC,IAAD,CAAUlD,GAAG,YCVVqD,EAAc,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SAI1B,OAAuB,IAFNtE,qBAAWX,GAApB4E,KAEIpE,OACNyE,EACA,cAAC,IAAD,CAAUlD,GAAG,OCJVsD,EAAY,WACrB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOP,KAAK,SAASC,QACjB,cAAC,EAAD,UACI,cAAC,EAAD,QAKR,cAAC,IAAD,CAAOD,KAAK,KAAKC,QACb,cAAC,EAAD,UACI,cAAC,EAAD,cCflBO,EAAO,WACT,OAAOC,KAAKlC,MAAMnC,aAAaC,QAAQ,UAAY,CAAEX,QAAQ,IAGpDgF,EAAY,WAErB,MAAyBC,qBAAWtF,EAAa,GAAImF,GAArD,mBAAOV,EAAP,KAAalE,EAAb,KAQA,OANAgF,qBAAU,WACDd,GAEL1D,aAAaiE,QAAQ,OAAQI,KAAKI,UAAUf,MAC7C,CAACA,IAGA,cAAC5E,EAAY4F,SAAb,CAAsB/B,MAAO,CACzBe,OACAlE,YAFJ,SAII,cAAC,EAAD,O,MClBZmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e6cb1b1e.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n\n\nexport const AuthContext = createContext();","\n\nexport const types = {\n    login: '[auth] Login',\n    logout: '[auth] Logout',\n}","import { types } from \"../types/types\";\n\n\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n        case types.logout:\n            return {\n                logged: false\n            }\n        default:\n            return state\n    }\n}","import React, { useContext } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = () => {\n\n\n    const { dispatch } = useContext(AuthContext)\n    const navigate = useNavigate()\n\n    const handleLogin = () => {\n\n        const action = {\n            type: types.login,\n            payload: { name: 'Axel' }\n        }\n\n        dispatch(action);\n\n        const lastPaht = localStorage.getItem('lastPath') || '/';\n\n        navigate(lastPaht, {\n            replace: true\n        });\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={handleLogin}\n            >\n                Login with Google\n            </button>\n        </div>\n    )\n}\n","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero': 'Batman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Bruce Wayne',\n        'first_appearance': 'Detective Comics #27',\n        'characters': 'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero': 'Superman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Kal-El',\n        'first_appearance': 'Action Comics #1',\n        'characters': 'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero': 'Flash',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Jay Garrick',\n        'first_appearance': 'Flash Comics #1',\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero': 'Green Lantern',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Alan Scott',\n        'first_appearance': 'All-American Comics #16',\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero': 'Green Arrow',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Oliver Queen',\n        'first_appearance': 'More Fun Comics #73',\n        'characters': 'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero': 'Wonder Woman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Princess Diana',\n        'first_appearance': 'All Star Comics #8',\n        'characters': 'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero': 'Martian Manhunter',\n        'publisher': 'DC Comics',\n        'alter_ego': 'J\\'onn J\\'onzz',\n        'first_appearance': 'Detective Comics #225',\n        'characters': 'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero': 'Robin/Nightwing',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dick Grayson',\n        'first_appearance': 'Detective Comics #38',\n        'characters': 'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero': 'Blue Beetle',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dan Garret',\n        'first_appearance': 'Mystery Men Comics #1',\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero': 'Black Canary',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dinah Drake',\n        'first_appearance': 'Flash Comics #86',\n        'characters': 'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero': 'Spider Man',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Peter Parker',\n        'first_appearance': 'Amazing Fantasy #15',\n        'characters': 'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero': 'Captain America',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Steve Rogers',\n        'first_appearance': 'Captain America Comics #1',\n        'characters': 'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero': 'Iron Man',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Tony Stark',\n        'first_appearance': 'Tales of Suspense #39',\n        'characters': 'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero': 'Thor',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Thor Odinson',\n        'first_appearance': 'Journey into Myster #83',\n        'characters': 'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero': 'Hulk',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Bruce Banner',\n        'first_appearance': 'The Incredible Hulk #1',\n        'characters': 'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero': 'Wolverine',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'James Howlett',\n        'first_appearance': 'The Incredible Hulk #180',\n        'characters': 'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero': 'Daredevil',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Matthew Michael Murdock',\n        'first_appearance': 'Daredevil #1',\n        'characters': 'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero': 'Hawkeye',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Clinton Francis Barton',\n        'first_appearance': 'Tales of Suspense #57',\n        'characters': 'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero': 'Cyclops',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Scott Summers',\n        'first_appearance': 'X-Men #1',\n        'characters': 'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero': 'Silver Surfer',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Norrin Radd',\n        'first_appearance': 'The Fantastic Four #48',\n        'characters': 'Norrin Radd'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ({\n    id,\n    superhero,\n    publisher,\n    alter_ego,\n    first_appearance,\n    characters\n}) => {\n    return (\n        <div className=\"col\">\n            <div className=\"card animate__animated animate__fadeIn\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col-4\">\n                        <img src={`/assets/${id}.jpg`} className=\"card-img\" alt={superhero} />\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">\n                                {superhero}\n                            </h5>\n                            <p className=\"card-text\">\n                                {alter_ego}\n                            </p>\n                            {\n                                (alter_ego !== characters) &&\n                                <p className=\"text-muted\">{characters}</p>\n                            }\n                            <p className=\"card-text\">\n                                <small className=\"text-muted\">{first_appearance}</small>\n                            </p>\n                            <Link to={`/hero/${id}`}>\n                                Más...\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../helpers/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({ publisher }) => {\n\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\n\n    return (\n        <div className=\"row rows-cols-1 row-cols-md-2 row-cols-sm-1 g-3 animate__animated animate__fadeIn\">\n            {\n                heroes.map(hero => (\n\n                    <HeroCard key={hero.id} {...hero} />\n                ))\n            }\n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\"\n\n\nexport const getHeroesByPublisher = (publisher) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n    if (!validPublishers.includes(publisher)) {\n        throw new Error(`${publisher} is not a valid publisher`);\n    }\n\n    return heroes.filter(hero => hero.publisher === publisher)\n}","import React from 'react'\nimport { HeroList } from '../hero/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DCScreen</h1>\n            <hr />\n            <HeroList\n                publisher={'DC Comics'}\n            />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { useParams, Navigate, useNavigate } from 'react-router-dom';\nimport { getHeroById } from '../../helpers/getHeroById';\n\nexport const HeroScreen = () => {\n\n    const { heroeId } = useParams();\n    const navigate1 = useNavigate()\n\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId]);\n\n    const handleReturn = () => {\n        navigate1(-1)\n    }\n\n    if (!hero) {\n        return <Navigate to=\"/\" />\n    }\n\n    const { id, alter_ego, superhero, publisher, first_appearance, characters } = hero\n\n    const imagePath = `/assets/${id}.jpg`\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img src={imagePath} alt={superhero} className=\"img-thumbnail animate__animated animate__fadeInLeft\" />\n            </div>\n            <div className=\"col-8\">\n                <h3>{hero.superhero}</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"><b>ALter ego:</b> {alter_ego}</li>\n                    <li className=\"list-group-item\"><b>Publisher:</b> {publisher}</li>\n                    <li className=\"list-group-item\"><b>First_appearance:</b> {first_appearance}</li>\n                </ul>\n                <br />\n                <h5>Characters</h5>\n                <p>{characters}</p>\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={handleReturn}\n                >\n                    Regresar\n                </button>\n            </div>\n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\"\n\n\nexport const getHeroById = (id = '') => {\n    return heroes.find(hero => hero.id === id)\n}","import React from 'react'\nimport { HeroList } from '../hero/HeroList'\n\nexport const MarveScreen = () => {\n    return (\n        <div>\n            <h1>MarveScreen</h1>\n            <hr />\n            <HeroList\n                publisher={'Marvel Comics'}\n            />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../helpers/getHeroesByName';\nimport queryString from 'query-string'\nimport { useForm } from '../../hook/useForm';\nimport { HeroCard } from '../hero/HeroCard';\n\nexport const SearchScreen = () => {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const { q = '' } = queryString.parse(location.search)\n\n    const [values, handleInputChange] = useForm({\n        searchText: q\n    });\n\n    const { searchText } = values;\n    const heroesFileted = useMemo(() => getHeroesByName(q), [q]);\n\n    const handelSearch = (e) => {\n        e.preventDefault();\n        navigate(`?q=${searchText}`);\n    }\n    return (\n        <div>\n            <h1>Búsquedas</h1>\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4>Buscar</h4>\n                    <hr />\n                    <form onSubmit={handelSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Buscar un heroe\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={searchText}\n                            onChange={handleInputChange}\n                        />\n\n                        <button\n                            className=\"btn btn-outline-primary mt-1\"\n                            type=\"submit\"\n                        >\n                            Buscar...\n                        </button>\n                    </form>\n                </div>\n                <div className=\"col-7\">\n                    <h4>Resultados</h4>\n                    <hr />\n\n                    {\n                        (q === '')\n                            ? <div className=\"alert alert-info\">Buscar un héroe</div>\n\n                            : heroesFileted.map(hero => (\n                                <HeroCard\n                                    key={hero.id}\n                                    {...hero}\n                                />\n                            ))\n                    }\n                    {\n                        (heroesFileted.length === 0) && <div className=\"alert alert-danger\">No hay resultados: {q}</div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByName = (name = '') => {\n\n    if (name.length === '') {\n        return []\n    };\n\n    name = name.toLowerCase();\n    return heroes.filter(hero => hero.superhero.toLowerCase().includes(name));\n}","import React, { useContext } from 'react'\nimport { Link, NavLink, useNavigate } from 'react-router-dom'\nimport { AuthContext } from '../../auth/AuthContext'\nimport { types } from '../../types/types'\n\nexport const Navbar = () => {\n\n    const { user, dispatch } = useContext(AuthContext)\n    const navigate = useNavigate()\n\n    const handleLogout = () => {\n\n        dispatch({\n            type: types.logout\n        });\n\n        navigate('/login', {\n            replace: true\n        })\n    }\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n\n            <Link\n                className=\"navbar-brand\"\n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink\n                        className=\"nav-item nav-link\"\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink\n                        className=\"nav-item nav-link\"\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink\n                        className=\"nav-item nav-link\"\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span className=\"nav-item nav-link text-info\">\n                        {user.name}\n                    </span>\n                    <button\n                        className=\"nav-item nav-link btn\"\n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav >\n    )\n}\n","\nimport { Routes, Route } from 'react-router-dom';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { HeroScreen } from '../components/hero/HeroScreen';\nimport { MarveScreen } from '../components/marvel/MarveScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nimport { Navbar } from '../components/ui/NavBar';\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"marvel\" element={<MarveScreen />} />\n                    <Route path=\"dc\" element={<DcScreen />} />\n                    <Route path=\"search\" element={<SearchScreen />} />\n                    <Route path=\"hero/:heroeId\" element={<HeroScreen />} />\n\n\n                    <Route path=\"/\" element={<MarveScreen />} />\n\n                </Routes>\n            </div>\n        </>\n    )\n}","import { useContext } from \"react\"\nimport { Navigate, useLocation } from \"react-router-dom\"\nimport { AuthContext } from \"../auth/AuthContext\"\n\n\nexport const PrivateRoute = ({ children }) => {\n\n    const { user } = useContext(AuthContext);\n\n    const { pathname, search } = useLocation();\n\n    localStorage.setItem('lastPath', pathname + search);\n\n    return user.logged\n        ? children\n        : <Navigate to=\"/login\" />\n}\n","import { useContext } from \"react\"\nimport { Navigate } from \"react-router-dom\"\nimport { AuthContext } from \"../auth/AuthContext\"\n\n\nexport const PublicRoute = ({ children }) => {\n\n    const { user } = useContext(AuthContext)\n\n    return user.logged === false\n        ? children\n        : <Navigate to=\"/\" />\n}","import React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/login\" element={\n                    <PublicRoute>\n                        <LoginScreen />\n                    </PublicRoute>\n                } />\n\n\n                <Route path=\"/*\" element={\n                    <PrivateRoute>\n                        <DashboardRoutes />\n                    </PrivateRoute>\n                }\n                />\n\n            </Routes>\n        </BrowserRouter>\n    )\n}\n","import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\nimport { AppRouter } from './routers/AppRouter';\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }\n}\n\nexport const HeroesApp = () => {\n\n    const [user, dispatch] = useReducer(authReducer, {}, init)\n\n    useEffect(() => {\n        if (!user) return\n\n        localStorage.setItem('user', JSON.stringify(user))\n    }, [user])\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            dispatch\n        }}>\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HeroesApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}